<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:fss="http://www.salesforce.com/schema/springsecurity"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.salesforce.com/schema/springsecurity 
        http://www.salesforce.com/schema/springsecurity/force-springsecurity-1.0.xsd">

	<context:property-placeholder location="classpath:oauth.properties"/>

    
    <!-- SFDC OAuth security config -->
    <fss:oauth end-point="${force.endPoint}" consumer-key="${force.consumerKey}"
        consumer-secret="${force.consumerSecret}" default-login-success="/secure/dogOwners" default-logout-success="/clear/logoutSuccess"
        login-url="/login" logout-url="/logout" logout-from-force-dot-com="true" />
    
       
	<!-- Configure Spring Security -->
	<!-- use-expressions and hasRole only needed if jsp tags are used. 
		If not using jsp tags you can omit the use-expressions property and set access="ROLE_USER" on the intercept-url tags -->
	<security:http entry-point-ref="authenticationProcessingFilterEntryPoint" use-expressions="true">
	    <!--<security:anonymous />
	    -->
	    <security:intercept-url pattern="/secure/**" access="hasRole('ROLE_USER')" />
	    <!-- sets this as the authentication filter over the default -->
	    <security:custom-filter position="FORM_LOGIN_FILTER" ref="authenticationFilter"/>
	    <security:custom-filter position="LOGOUT_FILTER" ref="logoutFilter"/>
	</security:http>

</beans>